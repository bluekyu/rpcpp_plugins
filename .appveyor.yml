#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: '{branch}-{build}'

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image:
- Visual Studio 2017

# set clone depth
clone_depth: 1

# clone directory
clone_folder: c:\projects\rpcpp_plugins

# scripts that are called at very beginning, before repo cloning
init:
- ps: >-
    if (Test-Path env:TRIGGER_NAME) {
        Update-AppveyorBuild -Message "Build by $env:TRIGGER_BUILD_VERSION in $env:TRIGGER_NAME"
    }
# upgrade vcpkg
- ps: pushd C:\tools\vcpkg
- git pull --quiet
- git checkout -qf 1c49195f789b7b8d7eaeb2542730a1f72cfbefcf
- .\bootstrap-vcpkg.bat
- ps: popd
- git --version
- cmake --version
- vcpkg version

# environment variables
environment:
    CMAKE_PREFIX_PATH: C:\projects\_install;
    CMAKE_GENERATOR: Visual Studio 15 2017 Win64
    BOOST_ROOT: C:\Libraries\boost_1_66_0
    VCPKG_DEFAULT_TRIPLET: x64-windows

# this is how to allow failing jobs in the matrix
matrix:
    fast_finish: true   # set this flag to immediately finish build once one of the jobs fails.

# build cache to preserve files/folders between builds
cache:
    - c:\tools\vcpkg\installed\

# scripts that run after cloning repository
install:
- vcpkg install fmt
- ps: (mkdir C:\projects\_install) -and (pushd C:\projects\_install)
- ps: Start-FileDownload ('https://ci.appveyor.com/api/projects/bluekyu/panda3d/artifacts/panda3d.7z?branch=master&job=Configuration%3A+' + "$env:CONFIGURATION")
- 7z x -y panda3d.7z > nul
- ps: Start-FileDownload ('https://ci.appveyor.com/api/projects/bluekyu/render-pipeline-cpp/artifacts/render_pipeline_cpp.7z?branch=master&job=Image%3A+Visual+Studio+2017%3B+Configuration%3A+' + "$env:CONFIGURATION")
- 7z x -y render_pipeline_cpp.7z > nul
- ps: Start-FileDownload ('https://ci.appveyor.com/api/projects/bluekyu/cpp-packages/artifacts/install/spdlog.7z?branch=master&job=Image%3A+Visual+Studio+2017%3B+Configuration%3A+' + "$env:CONFIGURATION")
- 7z x -y spdlog.7z > nul
- git clone -q --depth 1 --branch v1.0.14 https://github.com/ValveSoftware/openvr.git
- ps: popd

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x64

# build Configuration, i.e. Debug, Release, etc.
configuration:
- Debug
- Release

build:
    parallel: true                  # enable MSBuild parallel builds

# to run your custom scripts instead of automatic MSBuild
build_script:
- ps: (mkdir _build) -and (pushd _build)
- cmd: >-
    cmake -G "%CMAKE_GENERATOR%" -Wno-dev ..
    -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake
    -DCMAKE_INSTALL_PREFIX="C:/projects/_install/rpcpp_plugins"
    -Dpanda3d_ROOT:PATH="C:/projects/_install/panda3d"
    -DOpenVR_ROOT:PATH="C:/projects/_install/openvr"
    -Drpcpp_plugins_BUILD_ar_render:BOOL=ON
    -Drpcpp_plugins_BUILD_background2d:BOOL=ON
    -Drpcpp_plugins_BUILD_openvr:BOOL=ON
- cmake --build . --config %CONFIGURATION% --target install
- cmd: >-
    cmake -G "%CMAKE_GENERATOR%" -Wno-dev ..
    -DCMAKE_INSTALL_PREFIX="C:/projects/_install/render_pipeline_cpp"
- cmake --build . --config %CONFIGURATION% --target install
- ps: popd

after_build:
- 7z a rpcpp_plugins.7z "C:/projects/_install/rpcpp_plugins"

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to disable automatic tests
test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
- path: rpcpp_plugins.7z

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
- ps: >-
    if (($env:CONFIGURATION -eq "Release") -and ($env:APPVEYOR_REPO_BRANCH -eq "master")) {
        Start-AppveyorBuild -ApiKey $env:api_key -ProjectSlug 'rpcpp-samples' -EnvironmentVariables @{
            TRIGGER_NAME = $env:APPVEYOR_PROJECT_NAME
            TRIGGER_BUILD_VERSION = $env:APPVEYOR_BUILD_VERSION
        }
    }
